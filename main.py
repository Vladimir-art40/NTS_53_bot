import telebot
import config
from telebot import types


bot = telebot.TeleBot(config.token)


places = ['–•–æ–ª–ª', '–°—Ç–æ–ª–æ–≤–∞—è', '–ê–º—Ñ–∏—Ç–µ–∞—Ç—Ä', '–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—ã–µ', '–ì–∞–ª–µ—Ä–µ—è', '–ö–∞–±–∏–Ω–µ—Ç—ã']
language_data = {}


@bot.message_handler(commands=['restart', "help", 'start', "‚Ü© –ù–∞–∑–∞–¥"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üí¨ –ú–µ–Ω—é")
    markup.add(btn1)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {0.first_name}, —è –±–æ—Ç-–≥–∏—Ç –ø–æ –ù–æ–≤–≥–æ—Ä–æ–¥—Å–∫–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —à–∫–æ–ª–µ. \n–ü—É—Å—Ç—å —è –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, –Ω–æ —É–∂–µ –º–æ–≥—É –Ω–µ–º–∞–ª–æ.".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "‚ùì –û –°—Ç–∞—Ä—Ç–∞–ø Type")
def about_startup_type(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    text = """Startup Tour 2023 –≤ –í–µ–ª–∏–∫–æ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ!
28 –∞–ø—Ä–µ–ª—è –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ –ù–æ–≤–≥–æ—Ä–æ–¥—Å–∫–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —à–∫–æ–ª—ã –ø—Ä–æ–π–¥–µ—Ç Startup Tour 2023 ‚Äî
–º–∞—Å—à—Ç–∞–±–Ω–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –§–æ–Ω–¥–∞ ¬´–°–∫–æ–ª–∫–æ–≤–æ¬ª, –ø–æ—Å–≤—è—â–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –≤ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–Ω–¥—É—Å—Ç—Ä–∏—è—Ö.
–≠–∫—Å–ø–µ—Ä—Ç—ã –æ–±—Å—É–¥—è—Ç —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∏–Ω–¥—É—Å—Ç—Ä–∏–π —Ä–µ–≥–∏–æ–Ω–∞ –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã CreativeTECH-
–±–∏–∑–Ω–µ—Å–∞ –≤ –†–æ—Å—Å–∏–∏, —Ä–∞–∑–±–µ—Ä—É—Ç –∫–µ–π—Å—ã –∏ –ø–æ–¥–µ–ª—è—Ç—Å—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–ª–µ–∑–Ω—ã
–¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.
–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å —É–∑–Ω–∞—Ç—å –æ CreativeTECH-—Ç—Ä–µ–Ω–¥–∞—Ö –ø–µ—Ä–≤—ã–º–∏!
–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
9:00-10:00 –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
9:30-10:00 –ö–æ—Ñ–µ-–±—Ä–µ–π–∫
10:00-10:15 –û—Ç–∫—Ä—ã—Ç–∏–µ
10:15-18:00 –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ç—Ä–µ–∫, –ü—Ä–∏–∫–ª–∞–¥–Ω–æ–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç—Ä–µ–∫, –í—ã—Å—Ç–∞–≤–∫–∞\n
–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. https://startup-tour.ru/"""
    bot.send_message(message.chat.id,
                     text=text.format(
                         message.from_user), reply_markup=markup)
    

@bot.message_handler(func=lambda message: message.text == "üôç‚Äçüôç ‚Äç–ê–≤—Ç–æ—Ä—ã –±–æ—Ç–∞")
def autors(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_message(message.chat.id,
                     text="–∏–Ω—Ñ–∞ –æ  –Ω–∞—Å, —Ç–∞–º –∫–∫—É–∞—Ä –∫–æ–¥–∏–∫ –∫–∞–∫–æ–π –Ω–∏–±—É–¥—å –∏ –≤—Å—è–∫–æ–µ —Ç–∞–∫–æ–µ, —Ç–∞–º —Ç–µ–≥–∏ –Ω–∞ –Ω–∞—Å".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–í –º–µ–Ω—é" or message.text == "üí¨ –ú–µ–Ω—é")
def return1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn0 = types.KeyboardButton("‚ùì –û –°—Ç–∞—Ä—Ç–∞–ø Type")
    btn = types.KeyboardButton("–û –ù–¢–®")
    btn1 = types.KeyboardButton("–ù–∞–≤–∏–≥–∞—Ç–æ—Ä")
    btn2 = types.KeyboardButton("–û –ò–ù–¢–¶ –í–∞–ª–¥–∞–π")
    btn4 = types.KeyboardButton("üôç‚Äçüôç ‚Äç–ê–≤—Ç–æ—Ä—ã –±–æ—Ç–∞")
    markup.add(btn0, btn, btn1, btn2, btn4)
    bot.send_message(message.chat.id,
                     text="–ß—Ç–æ –Ω—É–∂–Ω–æ –≤–∞–º?".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–û –ù–¢–®")
def about_ntsh(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ –ù–®–¢")
    btn1 = types.KeyboardButton("–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
    btn2 = types.KeyboardButton("–û—Ç–¥–µ–ª—ã –ù–¢–®")
    btn3 = types.KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –ù–¢–®")
    btn4 = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn, btn1, btn2, btn3,btn4)
    bot.send_message(message.chat.id,
                     text="–ß—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ?".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ß—Ç–æ —Ç–∞–∫–æ–µ –ù–®–¢")
def about_ntsh(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_message(message.chat.id,
                     text="—Ç–µ–∫—Å—Ç –æ –Ω—Ç—à, –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏ —Ç.–¥.".format(
                         message.from_user), reply_markup=markup)
    

@bot.message_handler(func=lambda message: message.text == "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
def photos_ntsh(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_message(message.chat.id,
                     text="—Ñ–æ—Ç–æ—á–∫–∏".format(
                         message.from_user), reply_markup=markup)
    

@bot.message_handler(func=lambda message: message.text == "–û—Ç–¥–µ–ª—ã –ù–¢–®")
def otdels_ntsh(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_message(message.chat.id,
                     text="–æ—Ç–¥–µ–ª—ã –Ω—Ç—à —Å—Å —Ñ–æ—Ç–æ—á–∫–∞–º–∏ –∏–ª–∏ –±–µ–∑  –∏ —Ç.–¥.".format(
                         message.from_user), reply_markup=markup)
    

@bot.message_handler(func=lambda message: message.text == "–ò—Å—Ç–æ—Ä–∏—è –ù–¢–®")
def history_of_ntsh(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_message(message.chat.id,
                     text="–ò—Å—Ç–æ—Ä–∏—è –ù–¢–® —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª—å".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–û –ò–ù–¢–¶ –í–∞–ª–¥–∞–π")
def about_ntsh(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_message(message.chat.id,
                     text="—Ç–µ–∫—Å—Ç –æ –ò–ù–¢–¶ –≤–∞–ª–¥–∞–π,  –∏ —Ç.–¥.".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–∞–≤–∏–≥–∞—Ç–æ—Ä")
def nav(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –ù–¢–®?")
    btn1 = types.KeyboardButton("–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ø–æ –ù–¢–®")
    btn2 = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn, btn1, btn2)
    bot.send_message(message.chat.id,
                     text="–ì–¥–µ –≤—ã –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –ù–¢–®?")
def how_to_go_to_ntsh(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_message(message.chat.id,
                     text="[—Ö–∑ —á–µ —Ç—É—Ç].".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ø–æ –ù–¢–®")
def echo_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—Ö–æ–¥–æ–≤")
    btn2 = types.KeyboardButton("–ü–ª–∞–Ω—ã –∫–æ—Ä–ø—É—Å–æ–≤")
    btn3 = types.KeyboardButton("–ö–∞—Ä—Ç–∞ –°—Ç–∞—Ä—Ç–∞–ø –¢—É—Ä–∞")
    btn4 = types.KeyboardButton("–ö–∞–∫ –¥–æ–π—Ç–∏...")
    btn5 = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.chat.id, text="–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –ø–æ –ù–¢–®\n–ß—Ç–æ –≤–∞–º –Ω–∞–¥–∞?", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—Ö–æ–¥–æ–≤")
def echo_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_photo(message.chat.id, open('resources/inputs.jpg', 'rb'), '–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—Ö–æ–¥–æ–≤ –≤ –ù–¢–®', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ü–ª–∞–Ω—ã –∫–æ—Ä–ø—É—Å–æ–≤")
def echo_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("I –ö–æ—Ä–ø—É—Å")
    btn2 = types.KeyboardButton("II –ö–æ—Ä–ø—É—Å")
    btn3 = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä–ø—É—Å", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "I –ö–æ—Ä–ø—É—Å")
def echo_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_photo(message.chat.id, open('resources/corp1.jpg', 'rb'), "–ü–ª–∞–Ω I –∫–æ—Ä–ø—É—Å–∞ –ù–¢–®", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "II –ö–æ—Ä–ø—É—Å")
def echo_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_photo(message.chat.id, open('resources/corp2.jpg', 'rb'), "–ü–ª–∞–Ω II –∫–æ—Ä–ø—É—Å–∞ –ù–¢–®", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ö–∞—Ä—Ç–∞ –°—Ç–∞—Ä—Ç–∞–ø –¢—É—Ä–∞")
def echo_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton("–í –º–µ–Ω—é")
    markup.add(btn)
    bot.send_photo(message.chat.id, open('resources/places.jpg', 'rb'), "–ö–∞—Ä—Ç–∞ –°—Ç–∞—Ä—Ç–∞–ø –¢—É—Ä–∞", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫ –¥–æ–π—Ç–∏...")
def echo_message(message):
    markup = types.InlineKeyboardMarkup()
    for place in places:
        markup.add(types.InlineKeyboardButton(place, callback_data='apl_' + place))
    
    bot.send_message(message.chat.id, text="–ì–¥–µ –≤—ã —Å–µ–π—á–∞—Å?", reply_markup=markup)
    

@bot.callback_query_handler(func=lambda call: call.data.startswith('apl_'))
def callback_inline(call):
    place_from = call.data[4:]
    
    markup = types.InlineKeyboardMarkup()
    for place in places:
        if place == place_from:
            continue
        markup.add(types.InlineKeyboardButton(place, callback_data='apf_' + place + '_' + place_from))
    markup.add(types.InlineKeyboardButton('–ë–ª–∏–∂–∞–π—à–∏–π —Ç—É–∞–ª–µ—Ç', callback_data='apf_' + '–ë–ª–∏–∂–∞–π—à–∏–π —Ç—É–∞–ª–µ—Ç' + '_' + place_from))
    bot.delete_message(call.message.chat.id, call.message.id)
    bot.send_message(call.message.chat.id, text=f"–ò–∑ {place_from}... \n–ö—É–¥–∞ –≤–∞–º –Ω–∞–¥–æ?", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('apf_'))
def callback_inline(call):
    bot.delete_message(call.message.chat.id, call.message.id)
    place_to, place_from = call.data[4:].split('_')
    bot.send_message(call.message.chat.id, text=f"–ì–µ–Ω–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –∏–∑ {place_from} –≤ {place_to}")


print('Started')
bot.infinity_polling() 
